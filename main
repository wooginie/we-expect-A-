#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include<windows.h>
#define teamCount 13 //K리그에 참여하는 팀의 수 (= csv 파일의 행의 수)

typedef struct gameData {
	char opName[32]; //opponent name
	int vic;
	int tie;
	int lose;
} DATA;

void matchData(char* dataName, DATA list_game[]);
void prediction(DATA list_game[]);



int main()
{
	DATA list_game[teamCount];
	prediction(list_game);
	return 0;
}



void matchData(char* dataName, DATA list_game[]) {
	//구조체에 데이터를 저장하기 위해, 경기 전적 데이터 파일(.csv)를 불러온다.	
	FILE* fp = fopen(dataName, "r"); //file pointer
	if (fp == NULL) {
		printf("파일 읽기 실패!");
		return;
	}
	
	//파일을 쪼개고, 구조체에 저장한다.
	char line[512];
	int i = 0;
	while (fgets(line, sizeof(line), fp)) {
		sscanf(line, "%[^,],%d,%d,%d,", list_game[i].opName, &list_game[i].vic, &list_game[i].tie, &list_game[i].lose);
		i++;
	}
	fclose(fp);
}

void prediction(DATA list_game[]) {
	// 사용자에게 배팅하고 싶은 팀의 정보를 입력 받는다. (bet:배팅할 팀, opponent: 상대 팀)
	int bet, opponent;
	printf("==============================================================\n");
	printf("\t\t\t1. 강원\n");
	printf("\t\t\t2. 광주\n");
	printf("\t\t\t3. 김천상무\n");
	printf("\t\t\t4. 대구\n");
	printf("\t\t\t5. 서울\n");
	printf("\t\t\t6. 성남\n");
	printf("\t\t\t7. 수원\n");
	printf("\t\t\t8. 수원fc\n");
	printf("\t\t\t9. 울산\n");
	printf("\t\t\t10. 인천\n");
	printf("\t\t\t11. 전북\n");
	printf("\t\t\t12. 제주\n");
	printf("\t\t\t13. 포항\n");
	printf("==============================================================\n\n");
	printf("배팅하고 싶은 팀의 번호를 입력하세요: "); //csv 파일 선택	
	scanf("%d", &bet);
	printf("-\n");
	printf("상대하는 팀의 번호를 입력하세요: "); //구조체 멤버 선택
	scanf("%d", &opponent);
	system("cls");

	//switch case 문으로 배팅하고 싶은 팀의 경기 전적 데이터 파일(.csv) 선택
	char dataFile[20];
	switch (bet) {
	case 1:
		strcpy(dataFile, "강원.csv");
		break;
	case 2:
		strcpy(dataFile, "광주.csv");
		break;
	case 3:
		strcpy(dataFile, "김천상무.csv");
		break;
	case 4:
		strcpy(dataFile, "대구.csv");
		break;
	case 5:
		strcpy(dataFile, "서울.csv");
		break;
	case 6:
		strcpy(dataFile, "성남.csv");
		break;
	case 7:
		strcpy(dataFile, "수원.csv");
		break;
	case 8:
		strcpy(dataFile, "수원FC.csv");
		break;
	case 9:
		strcpy(dataFile, "울산.csv");
		break;
	case 10:
		strcpy(dataFile, "인천.csv");
		break;
	case 11:
		strcpy(dataFile, "전북.csv");
		break;
	case 12:
		strcpy(dataFile, "제주.csv");
		break;
	case 13:
		strcpy(dataFile, "포항.csv");
		break;
	default:
		printf("잘못된 입력입니다.\n");
		return;
	}

	// 데이터 파일에서 경기 전적 가져오기
	matchData(dataFile, list_game);

	// 경기 전적을 기반으로 승무패 확률 계산하고 출력하기
	double vic = list_game[opponent-1].vic;
	double tie = list_game[opponent-1].tie;
	double lose = list_game[opponent-1].lose;
	double games = vic + tie + lose;
	printf("\n==============================================================\n\n");
	printf("\t\t\t%s\n\n\t\t\t VS\n\n \t\t\t%s\n\n", list_game[bet - 1].opName, list_game[opponent - 1].opName);
	printf("\n==============================================================\n\n");
	printf("확률을 계산 중입니다. 잠시만 기다려주세요......");
	printf("\t\t승리 확률: %.2lf%%\n", vic / games * 100);
	printf("\t\t무승부 확률: %.2lf%%\n", tie / games * 100);
	printf("\t\t패배 확률: %.2lf%%\n", lose / games * 100);
	printf("\n==============================================================\n\n");
}
